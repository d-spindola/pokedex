import styled from "@emotion/styled";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { Fragment, ReactNode } from "react";
import PokemonCardLink from "../components/PokemonCardLink";
import PokemonGridList from "../components/PokemonGridList";
import { getManyPokemons } from "../lib/api";
import { Pokemon } from "../types/api";

const FilterContainer = styled("div")(() => ({
  backgroundColor: "#212121",
  height: "8em",
  display: "flex",
  alignItems: "center",
  gap: "0.5em",
  padding: "0 1.5em",
}));

const mapTooltipColor = (type: string | ReactNode) => {
  switch (type) {
    case "grass":
      return "green";
    case "fire":
      return "red";
    case "thunder":
      return "yellow";
  }
};

const PokemonTypeTooltip = styled("div")(({ children }) => ({
  height: "2em",
  minWidth: "4em",
  fontSize: "1.5em",
  color: "black",
  borderRadius: "1.2em",
  backgroundColor: mapTooltipColor(children),
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  "&:hover": {
    cursor: "pointer",
  },
}));

const HomePageMainLayout = styled("main")(({ children }) => ({
  display: "grid",
  gridTemplateColumns: "1fr",
  gap: "1.5em",
  background: "linear-gradient(115deg, #ffffff, #ccd7ffe0)",
  padding: "0 1em",
}));

interface HomePageProps {
  pokemons: Pokemon[];
}

const Home: NextPage<HomePageProps> = ({ pokemons }) => {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <HomePageMainLayout>
        <header>
          <div>
            <Image src="/logo.svg" width={32} height={32} />
          </div>
        </header>

        <FilterContainer>
          {/* <PokemonTypeTooltip>fire</PokemonTypeTooltip>
          <PokemonTypeTooltip>grass</PokemonTypeTooltip>
          <PokemonTypeTooltip>thunder</PokemonTypeTooltip> */}
        </FilterContainer>

        <div>
          <PokemonGridList>
            <Fragment>
              {pokemons.map((p) => (
                <PokemonCardLink
                  key={p.name}
                  pokemonName={p.name}
                  id={p.name}
                  types={[]}
                />
              ))}
            </Fragment>
          </PokemonGridList>
        </div>
      </HomePageMainLayout>
    </div>
  );
};

export const getServerSideProps = async (context: any) => {
  const pokemons = await getManyPokemons();

  return {
    props: {
      pokemons: pokemons.data.results,
    },
  };
};

export default Home;
