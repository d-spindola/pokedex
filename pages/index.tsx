import { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import HomePageMainLayout from '../components/layouts/home/HomePageMainLayout'
import PokemonGridList from '../components/PokemonGridList'
import { getManyPokemons, getPokemon } from '../lib/api'
import { ApiPokemon } from '../lib/types'
import { Pokemon } from '../types/api'
import Colorthief, { Color } from 'colorthief'
import Header from '../components/layouts/shared/Header'
import PokemonSearchFilter from '../components/PokemonSearchFilter'
import { DataContextProvider } from 'context/DataContext'

interface HomePageProps {
  pokemons: Pokemon[]
}

const Home: NextPage<HomePageProps> = ({ pokemons }: HomePageProps) => {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HomePageMainLayout>
        <DataContextProvider data={pokemons}>
          <Header appName={process.env.NEXT_PUBLIC_APP_NAME as string}>
            <PokemonSearchFilter />
          </Header>
          <div>
            <PokemonGridList />
          </div>
        </DataContextProvider>
      </HomePageMainLayout>
    </>
  )
}

const fetchPokemonMetadadata = async (
  pokemon: ApiPokemon,
  colorFunc: (str: string, quality: number) => Promise<Color>,
): Promise<Pokemon> => {
  const { sprites, ...rest } = await getPokemon(pokemon.name)
  const pokemonDominantColor = await colorFunc(sprites.front_default, 50)

  return {
    ...rest,
    dominantColor: pokemonDominantColor,
    sprites,
  }
}

export const getServerSideProps: GetServerSideProps = async () => {
  const pokemons = await getManyPokemons()

  const pokemonsWithColors = await Promise.all(
    pokemons.data.results.map(async (p: ApiPokemon) =>
      fetchPokemonMetadadata(p, Colorthief.getColor),
    ),
  )

  return {
    props: {
      pokemons: pokemonsWithColors,
    },
  }
}

export default Home
